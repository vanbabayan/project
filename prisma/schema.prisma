// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id       String   @id @default(uuid())
  email    String   @unique
  name     String?
  password String
  posts     Post[]   @relation("UserPosts")
  createdAt DateTime @default(now())
}

model Post{
  id       String   @id @default(uuid())
  title    String
  content  String?
  author   User     @relation("UserPosts", fields: [authorId], references: [id])
  authorId String
  images   Image[] 
  published Boolean @default(false)
  createdAt DateTime @default(now())
}

model Menu{
  id       String   @id @default(uuid())
  title    String
  href     String
  order    Int @default(0) 
  submenus Submenu[]

  
  @@index([order]) 
}


model Submenu{
  id       String   @id @default(uuid())
  title    String
  href     String
  order    Int @default(0)

  menu Menu @relation(fields: [menuId], references: [id])
  menuId  String

  @@index([order])
  @@index([menuId])
}


model Image {
  id         String   @id @default(uuid())
  filename   String
  url        String
  size       Int?
  createdAt  DateTime @default(now())
  
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String?

  topBanner    TopBanner?  @relation(fields: [topbannerId], references: [id])
  topbannerId  String?



  @@index([postId])
  @@index([topbannerId])
}


model TopBanner {
  id       String   @id @default(uuid())
  name     String
  description String
  fb_link     String
  inst_link   String
  linkedin_link String
  order    Int @default(0)
  images   Image[]  // все изображения, привязанные к слайдеру
}